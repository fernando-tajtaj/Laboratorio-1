/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.vistas;

import com.controlador.BoletoControlador;
import com.controlador.PersonaControlador;
import com.modelo.Boleto;
import com.modelo.Persona;
import com.modelo.Session;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Optional;
import java.util.Random;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author ktajt
 */
public class BoletoVista extends javax.swing.JFrame {

    /**
     * Creates new form CompraVista
     */
    public BoletoVista() {
        initComponents();
        InicializarPanelBus();
        InicializarCompraBoleto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelEncabezado = new javax.swing.JPanel();
        labelEncabezado = new javax.swing.JLabel();
        panelBus = new javax.swing.JPanel();
        panelReservarAsiento = new javax.swing.JPanel();
        btnBuscarPersona = new javax.swing.JButton();
        tfPersonaDPI = new javax.swing.JTextField();
        tfPersonaNIT = new javax.swing.JTextField();
        tfPersonaNombre = new javax.swing.JTextField();
        tfAsientos = new javax.swing.JTextField();
        tfPrecioAsiento = new javax.swing.JTextField();
        tfTotal = new javax.swing.JTextField();
        labelPersonaDPI = new javax.swing.JLabel();
        labelPersonaNIT = new javax.swing.JLabel();
        labelPersonaNombre = new javax.swing.JLabel();
        labelAsientos = new javax.swing.JLabel();
        labelPrecioAsiento = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        panelGuardarAsiento = new javax.swing.JPanel();
        btnComprar = new javax.swing.JLabel();
        panelDetalleAsiento = new javax.swing.JPanel();
        labelAsientoCoordenada = new javax.swing.JLabel();
        labelAsientoDetalle = new javax.swing.JLabel();
        labelAsientoUbicacion = new javax.swing.JLabel();
        labelBoletoId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelEncabezado.setBackground(new java.awt.Color(8, 125, 111));

        labelEncabezado.setBackground(new java.awt.Color(8, 125, 111));
        labelEncabezado.setFont(new java.awt.Font("Fredoka One", 1, 36)); // NOI18N
        labelEncabezado.setForeground(new java.awt.Color(255, 255, 255));
        labelEncabezado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelEncabezado.setText("BOLETOS - RESERVAR ASIENTOS");

        javax.swing.GroupLayout panelEncabezadoLayout = new javax.swing.GroupLayout(panelEncabezado);
        panelEncabezado.setLayout(panelEncabezadoLayout);
        panelEncabezadoLayout.setHorizontalGroup(
            panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
        );
        panelEncabezadoLayout.setVerticalGroup(
            panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        panelPrincipal.add(panelEncabezado, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 16, -1, -1));

        panelBus.setBackground(new java.awt.Color(255, 199, 83));

        javax.swing.GroupLayout panelBusLayout = new javax.swing.GroupLayout(panelBus);
        panelBus.setLayout(panelBusLayout);
        panelBusLayout.setHorizontalGroup(
            panelBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 461, Short.MAX_VALUE)
        );
        panelBusLayout.setVerticalGroup(
            panelBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        panelPrincipal.add(panelBus, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 134, -1, 640));

        panelReservarAsiento.setBackground(new java.awt.Color(249, 242, 230));

        btnBuscarPersona.setBackground(new java.awt.Color(249, 242, 230));
        btnBuscarPersona.setToolTipText("REALIZARA BUSQUEDA DE PERSONAS POR DPI O NIT");
        btnBuscarPersona.setBorder(null);
        btnBuscarPersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarPersonaMouseClicked(evt);
            }
        });

        tfPersonaDPI.setBackground(new java.awt.Color(4, 41, 64));
        tfPersonaDPI.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        tfPersonaDPI.setForeground(new java.awt.Color(255, 255, 255));
        tfPersonaDPI.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfPersonaDPI.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        tfPersonaNIT.setBackground(new java.awt.Color(4, 41, 64));
        tfPersonaNIT.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        tfPersonaNIT.setForeground(new java.awt.Color(255, 255, 255));
        tfPersonaNIT.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfPersonaNIT.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        tfPersonaNombre.setBackground(new java.awt.Color(4, 41, 64));
        tfPersonaNombre.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        tfPersonaNombre.setForeground(new java.awt.Color(255, 255, 255));
        tfPersonaNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfPersonaNombre.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        tfAsientos.setBackground(new java.awt.Color(4, 41, 64));
        tfAsientos.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        tfAsientos.setForeground(new java.awt.Color(255, 255, 255));
        tfAsientos.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfAsientos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        tfPrecioAsiento.setBackground(new java.awt.Color(4, 41, 64));
        tfPrecioAsiento.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        tfPrecioAsiento.setForeground(new java.awt.Color(255, 255, 255));
        tfPrecioAsiento.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfPrecioAsiento.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        tfTotal.setBackground(new java.awt.Color(4, 41, 64));
        tfTotal.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        tfTotal.setForeground(new java.awt.Color(255, 255, 255));
        tfTotal.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfTotal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        labelPersonaDPI.setFont(new java.awt.Font("Fredoka One", 1, 14)); // NOI18N
        labelPersonaDPI.setForeground(new java.awt.Color(4, 41, 64));
        labelPersonaDPI.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPersonaDPI.setText("DPI:");

        labelPersonaNIT.setFont(new java.awt.Font("Fredoka One", 1, 14)); // NOI18N
        labelPersonaNIT.setForeground(new java.awt.Color(4, 41, 64));
        labelPersonaNIT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPersonaNIT.setText("NIT:");

        labelPersonaNombre.setFont(new java.awt.Font("Fredoka One", 1, 14)); // NOI18N
        labelPersonaNombre.setForeground(new java.awt.Color(4, 41, 64));
        labelPersonaNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPersonaNombre.setText("CLIENTE:");

        labelAsientos.setFont(new java.awt.Font("Fredoka One", 1, 14)); // NOI18N
        labelAsientos.setForeground(new java.awt.Color(4, 41, 64));
        labelAsientos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelAsientos.setText("ASIENTOS:");

        labelPrecioAsiento.setFont(new java.awt.Font("Fredoka One", 1, 14)); // NOI18N
        labelPrecioAsiento.setForeground(new java.awt.Color(4, 41, 64));
        labelPrecioAsiento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPrecioAsiento.setText("PRECIO:");

        labelTotal.setFont(new java.awt.Font("Fredoka One", 1, 14)); // NOI18N
        labelTotal.setForeground(new java.awt.Color(4, 41, 64));
        labelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTotal.setText("TOTAL:");

        panelGuardarAsiento.setBackground(new java.awt.Color(4, 41, 64));

        btnComprar.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        btnComprar.setForeground(new java.awt.Color(255, 255, 255));
        btnComprar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnComprar.setText("COMPRAR ASIENTO");
        btnComprar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnComprarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnComprarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnComprarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panelGuardarAsientoLayout = new javax.swing.GroupLayout(panelGuardarAsiento);
        panelGuardarAsiento.setLayout(panelGuardarAsientoLayout);
        panelGuardarAsientoLayout.setHorizontalGroup(
            panelGuardarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panelGuardarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelGuardarAsientoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnComprar, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelGuardarAsientoLayout.setVerticalGroup(
            panelGuardarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
            .addGroup(panelGuardarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelGuardarAsientoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnComprar, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout panelReservarAsientoLayout = new javax.swing.GroupLayout(panelReservarAsiento);
        panelReservarAsiento.setLayout(panelReservarAsientoLayout);
        panelReservarAsientoLayout.setHorizontalGroup(
            panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReservarAsientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelGuardarAsiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                        .addComponent(labelPersonaDPI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPersonaDPI, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                        .addComponent(labelPersonaNIT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addComponent(tfPersonaNIT, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                        .addComponent(labelPersonaNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPersonaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBuscarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                        .addComponent(labelAsientos, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAsientos, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                        .addComponent(labelPrecioAsiento, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPrecioAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                        .addComponent(labelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelReservarAsientoLayout.setVerticalGroup(
            panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReservarAsientoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelPersonaDPI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfPersonaDPI, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPersonaNIT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPersonaNIT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPersonaNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(tfPersonaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAsientos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAsientos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPrecioAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrecioAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(panelReservarAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(panelGuardarAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        panelPrincipal.add(panelReservarAsiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 134, -1, 400));

        panelDetalleAsiento.setBackground(new java.awt.Color(4, 41, 64));

        labelAsientoCoordenada.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        labelAsientoCoordenada.setForeground(new java.awt.Color(255, 255, 255));
        labelAsientoCoordenada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        labelAsientoDetalle.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        labelAsientoDetalle.setForeground(new java.awt.Color(255, 255, 255));
        labelAsientoDetalle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        labelAsientoUbicacion.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        labelAsientoUbicacion.setForeground(new java.awt.Color(255, 255, 255));
        labelAsientoUbicacion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        labelBoletoId.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        labelBoletoId.setForeground(new java.awt.Color(255, 255, 255));
        labelBoletoId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panelDetalleAsientoLayout = new javax.swing.GroupLayout(panelDetalleAsiento);
        panelDetalleAsiento.setLayout(panelDetalleAsientoLayout);
        panelDetalleAsientoLayout.setHorizontalGroup(
            panelDetalleAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetalleAsientoLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelDetalleAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelAsientoCoordenada, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addGroup(panelDetalleAsientoLayout.createSequentialGroup()
                        .addComponent(labelAsientoDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelAsientoUbicacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelBoletoId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        panelDetalleAsientoLayout.setVerticalGroup(
            panelDetalleAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetalleAsientoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(labelBoletoId, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelAsientoCoordenada, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDetalleAsientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelAsientoDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelAsientoUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        panelPrincipal.add(panelDetalleAsiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 545, 272, 140));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarPersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarPersonaMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        String personaDPI = this.tfPersonaDPI.getText();
        String personaNIT = this.tfPersonaNIT.getText();

        if (personaNIT.isEmpty() && !personaDPI.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "DEBE INGRESAR UN NUMERO DE DOCUMENTO VALIDO", "Error", JOptionPane.ERROR_MESSAGE);
            this.btnComprar.setEnabled(false);
            return;
        }

        PersonaControlador personaControlador = new PersonaControlador();

        long personaDocumento = !personaDPI.isEmpty() ? Long.parseLong(personaDPI) : 0;

        if (personaDocumento == 0 && personaNIT.isEmpty()) {
            JOptionPane.showMessageDialog(null, "DEBE INGRESAR UN NUMERO DE DOCUMENTO O NIT", "Error", JOptionPane.ERROR_MESSAGE);
            this.btnComprar.setEnabled(false);
            return;
        }

        Persona persona = personaControlador.BuscarPersona(personaDocumento, personaNIT);

        if (persona == null) {
            this.btnComprar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "NO SE ENCONTRARON REGISTROS CON ESE NUMERO DE DOCUMENTO O NIT. SE REDIRECCIONARA A LA PESTAÑA DE REGISTRO DE PERSONAS", "Error", JOptionPane.ERROR_MESSAGE);
            this.RedireccionarPersona();
            return;
        }

        session = Session.getInstance();
        session.setIdTemporal(persona.getPersonaId());

        this.tfPersonaDPI.setText(String.valueOf(persona.getPersonaDocumento()));
        this.tfPersonaNIT.setText(persona.getPersonaNIT());
        this.tfPersonaNombre.setText(persona.getPersonaNombre());

        this.btnComprar.setEnabled(true);
    }//GEN-LAST:event_btnBuscarPersonaMouseClicked

    private void btnComprarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnComprarMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (!btnComprar.isEnabled()) {
            return;
        }

        if (this.tfAsientos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar asientos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        BoletoControlador boletoControlador = new BoletoControlador();

        LocalDateTime fechaHoraActual = LocalDateTime.now();
        // Define el formato deseado
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

        UUID personaId = session.getIdTemporal();

        Boleto boleto = new Boleto();
        boleto.setBoletoId(this.GenerarBoletoId());
        boleto.setIdPersona(personaId);
        boleto.setBoletoAsientos(this.tfAsientos.getText());
        boleto.setBoletoPrecioAsiento(Double.parseDouble(this.tfPrecioAsiento.getText()));
        boleto.setBoletoTotal(Double.parseDouble(this.tfTotal.getText()));
        boleto.setBoletoFechaCreacion(fechaHoraActual.format(formato));

        try {
            boletoControlador.GuardarBoleto(boleto);
            JOptionPane.showMessageDialog(null, "ASIENTOS RESERVADOS CORRECTAMENTE", "Exito", JOptionPane.INFORMATION_MESSAGE);
            this.LimpiarFormulario();
            this.panelBus.removeAll();
            this.CargarAsientos();
            this.panelBus.revalidate();
        } catch (IOException ex) {
            this.tfAsientos.setText("");
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(BoletoVista.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            session.clearSession();
            this.InicializarCompraBoleto();
        }

    }//GEN-LAST:event_btnComprarMouseClicked

    private void btnComprarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnComprarMouseEntered
        // TODO add your handling code here:
        panelGuardarAsiento.setBackground(new Color(6, 69, 107));

    }//GEN-LAST:event_btnComprarMouseEntered

    private void btnComprarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnComprarMouseExited
        // TODO add your handling code here:
        panelGuardarAsiento.setBackground(new Color(4, 41, 64));
    }//GEN-LAST:event_btnComprarMouseExited
    
    private UUID GenerarBoletoId() {
        return UUID.randomUUID();
    }

    private void RedireccionarPersona() {
        PersonaVista personaVista = new PersonaVista();
        personaVista.show();
    }

    private MouseAdapter CrearClicAsientoDisponible(char row, int subColumn) {
        return new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila = (e.getY() / 50) + 1;
                char rowChar = (char) (row + fila - 1);

                String coordenadaAsiento = String.valueOf(rowChar) + subColumn;

                if (coordenadaAsiento == null || coordenadaAsiento.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El asiento no es válido.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (tfAsientos.getText().contains(coordenadaAsiento)) {
                    JOptionPane.showMessageDialog(null, "El asiento ya ha sido seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (!coordenadaAsiento.isEmpty() && !tfAsientos.isEnabled()){
                    JOptionPane.showMessageDialog(null, "No puede seleccionar este asiento, debe comprar otro boleto.", "Error", JOptionPane.ERROR_MESSAGE);
                }else {                    
                    // Concatenar la nueva coordenada
                    tfAsientos.setText(tfAsientos.getText().isEmpty() ? coordenadaAsiento : tfAsientos.getText() + ", " + coordenadaAsiento);
                    tfTotal.setText(String.valueOf(CalcularPrecioAsiento(tfAsientos.getText())));
                }
            }
        };
    }

    private MouseAdapter CrearClicAsientoOcupado(char row, int subColumn) {
        return new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila = (e.getY() / 50) + 1;
                char rowChar = (char) (row + fila - 1);

                String coordenadaAsiento = String.valueOf(rowChar) + subColumn;

                if (coordenadaAsiento == null || coordenadaAsiento.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El asiento no es válido.", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (tfAsientos.isEnabled()){
                    JOptionPane.showMessageDialog(null, "Asiento reservado, seleccione otro.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    CargarBoletoPersona(coordenadaAsiento);
                }
            }
        };
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BoletoVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BoletoVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BoletoVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BoletoVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BoletoVista().setVisible(true);
            }
        });
    }

    private void InicializarPanelBus() {
        this.panelBus.setPreferredSize(new Dimension(450, 700));
        this.panelBus.setBackground(Color.WHITE);
        this.panelBus.setLayout(new GridLayout(0, numColumns, 10, 10));

        this.CargarAsientos();
    }

    private void InicializarCompraBoleto() {
        this.tfPrecioAsiento.setEnabled(false);
        this.tfPrecioAsiento.setText("15.00");
        this.btnComprar.setEnabled(false);

        ImageIcon originalIcon = new ImageIcon("../Recursos/lupa.png");
        this.btnBuscarPersona.setIcon(originalIcon);
    }

    private void LimpiarFormulario() {
        this.tfAsientos.setText("");
        this.tfPersonaDPI.setText("");
        this.tfPersonaNIT.setText("");
        this.tfPersonaNombre.setText("");
        this.tfTotal.setText("");
    }

    private void CargarAsientos() {
        BoletoControlador boletoControlador = new BoletoControlador();
        List<String> listadoAsientosReservados = boletoControlador.ObtenerAsientosReservados();

        this.AgregarAsientoConductor();
        this.AgregarEncabezadosColumnas();
        for (char row = 'A'; row <= 'I'; row++) {
            this.AgregarAsientosPorFila(listadoAsientosReservados, row);
        }
    }

    private void CargarBoletoPersona(String pBoletoAsiento) {
        BoletoControlador boletoControlador = new BoletoControlador();

        Boleto boleto = boletoControlador.BuscarBoletoAsiento(pBoletoAsiento);

        if (boleto == null) {
            return;
        }

        PersonaControlador personaControlador = new PersonaControlador();
        UUID personaId = boleto.getIdPersona();

        Persona persona = personaControlador.BuscarPersona(personaId);

        if (persona == null) {
            return;
        }

        this.tfPersonaDPI.setEnabled(false);
        this.tfPersonaNIT.setEnabled(false);
        this.tfPersonaNombre.setEnabled(false);
        this.tfAsientos.setEnabled(false);
        this.tfPrecioAsiento.setEnabled(false);
        this.tfTotal.setEnabled(false);
        this.btnComprar.setEnabled(false);
        this.btnBuscarPersona.setEnabled(false);

        this.tfPersonaDPI.setText(String.valueOf(persona.getPersonaDocumento()));
        this.tfPersonaNIT.setText(String.valueOf(persona.getPersonaNIT()));
        this.tfPersonaNombre.setText(persona.getPersonaNombre());
        this.tfAsientos.setText(boleto.getBoletoAsientos());
        this.tfPrecioAsiento.setText(String.valueOf(boleto.getBoletoPrecioAsiento()));
        this.tfTotal.setText(String.valueOf(boleto.getBoletoTotal()));

        this.labelBoletoId.setText("Boleto No. " + boleto.getBoletoId().toString().substring(0, 8));
        this.labelAsientoDetalle.setText("UBICACIÓN: ");
        this.labelAsientoCoordenada.setText(pBoletoAsiento);

        if (pBoletoAsiento.contains("1") || pBoletoAsiento.contains("4")) {
            this.labelAsientoUbicacion.setText("VENTANILLA");
        } else if (pBoletoAsiento.contains("2") || pBoletoAsiento.contains("3")) {
            this.labelAsientoUbicacion.setText("PASILLO");
        }
    }

    private double CalcularPrecioAsiento(String pAsientosSeleccionados) {
        double precioAsientoIndividual = Double.parseDouble(this.tfPrecioAsiento.getText());
        double precioAsientoTotal = 0.00;

        String[] asientos = pAsientosSeleccionados.split(",");

        for (String asiento : asientos) {
            precioAsientoTotal += precioAsientoIndividual;
        }

        return precioAsientoTotal;
    }

    private JLabel CrearAsiento(String seatNumber, List<String> listadoAsientosReservados) {
        if (listadoAsientosReservados == null || listadoAsientosReservados.size() <= 0) {
            return this.CrearAsientoDisponible(seatNumber);
        }

        Optional<String> boletoEncontrado = listadoAsientosReservados.stream()
                .filter(boleto -> boleto.equals(seatNumber))
                .findFirst();

        if (boletoEncontrado == null || boletoEncontrado.isEmpty()) {
            return this.CrearAsientoDisponible(seatNumber);
        } else {
            return this.CrearAsientoOcupado(seatNumber);
        }
    }

    private JLabel CrearAsientoConductor() {
        JLabel seatLabel = new JLabel("C", JLabel.CENTER);
        seatLabel.setVerticalAlignment(JLabel.CENTER);
        seatLabel.setHorizontalAlignment(JLabel.CENTER);
        seatLabel.setOpaque(true);
        seatLabel.setBackground(Color.WHITE);

        // Cargar la imagen desde el archivo
        ImageIcon originalIcon = new ImageIcon("../Recursos/driving.png");
        Image scaledImage = originalIcon.getImage().getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        seatLabel.setIcon(scaledIcon);

        return seatLabel;
    }

    private JLabel CrearAsientoDisponible(String seatNumber) {
        JLabel asientoDisponible = new JLabel(seatNumber, JLabel.CENTER);
        asientoDisponible.setVerticalAlignment(JLabel.CENTER);
        asientoDisponible.setHorizontalAlignment(JLabel.CENTER);
        asientoDisponible.setOpaque(true);
        asientoDisponible.setBackground(Color.WHITE);

        // Agregar una imagen como icono del asiento (ajusta la ruta de la imagen según tu ubicación)
        ImageIcon originalIcon = new ImageIcon("../Recursos/asiento.png");
        Image scaledImage = originalIcon.getImage().getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        asientoDisponible.setIcon(scaledIcon);

        char rowChar = seatNumber.charAt(0);

        // Obtén el segundo carácter como número
        int subColumnNumber = Character.getNumericValue(seatNumber.charAt(1));

        asientoDisponible.addMouseListener(CrearClicAsientoDisponible(rowChar, subColumnNumber));

        return asientoDisponible;
    }

    private JLabel CrearAsientoOcupado(String seatNumber) {
        JLabel asientoOcupado = new JLabel(seatNumber, JLabel.CENTER);
        asientoOcupado.setVerticalAlignment(JLabel.CENTER);
        asientoOcupado.setHorizontalAlignment(JLabel.CENTER);
        asientoOcupado.setOpaque(true);
        asientoOcupado.setBackground(Color.WHITE);

        // Agregar una imagen como icono del asiento (ajusta la ruta de la imagen según tu ubicación)
        ImageIcon originalIcon = new ImageIcon("../Recursos/pasajero.png");
        Image scaledImage = originalIcon.getImage().getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        asientoOcupado.setIcon(scaledIcon);

        char rowChar = seatNumber.charAt(0);

        // Obtén el segundo carácter como número
        int subColumnNumber = Character.getNumericValue(seatNumber.charAt(1));

        asientoOcupado.addMouseListener(CrearClicAsientoOcupado(rowChar, subColumnNumber));

        return asientoOcupado;
    }

    private JLabel CrearAsientoAislado() {
        JLabel aisleLabel = new JLabel("", JLabel.CENTER);
        aisleLabel.setOpaque(true);
        aisleLabel.setBackground(Color.LIGHT_GRAY); // Color gris para representar el pasillo
        return aisleLabel;
    }

    private JLabel CrearLabelVacio() {
        return new JLabel("", JLabel.CENTER);
    }

    private void AgregarAsientoConductor() {
        this.panelBus.add(this.CrearAsientoConductor());
    }

    private void AgregarEncabezadosColumnas() {
        for (int i = 1; i < numColumns; i++) {
            this.panelBus.add(this.CrearLabelVacio());
        }
    }

    private void AgregarAsientosPorFila(List<String> listadoAsientosReservados, char row) {
        for (int subColumn = 1; subColumn <= numSubColumns; subColumn++) {
            String asientoNumero = row + String.valueOf(subColumn);
            JLabel asiento = this.CrearAsiento(asientoNumero, listadoAsientosReservados);
            this.panelBus.add(asiento);
        }

        this.panelBus.add(this.CrearAsientoAislado());

        for (int subColumn = 3; subColumn <= 2 * numSubColumns; subColumn++) {
            String seatNumber = row + String.valueOf(subColumn);
            JLabel asiento = this.CrearAsiento(seatNumber, listadoAsientosReservados);
            panelBus.add(asiento);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPersona;
    private javax.swing.JLabel btnComprar;
    private javax.swing.JLabel labelAsientoCoordenada;
    private javax.swing.JLabel labelAsientoDetalle;
    private javax.swing.JLabel labelAsientoUbicacion;
    private javax.swing.JLabel labelAsientos;
    private javax.swing.JLabel labelBoletoId;
    private javax.swing.JLabel labelEncabezado;
    private javax.swing.JLabel labelPersonaDPI;
    private javax.swing.JLabel labelPersonaNIT;
    private javax.swing.JLabel labelPersonaNombre;
    private javax.swing.JLabel labelPrecioAsiento;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JPanel panelBus;
    private javax.swing.JPanel panelDetalleAsiento;
    private javax.swing.JPanel panelEncabezado;
    private javax.swing.JPanel panelGuardarAsiento;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelReservarAsiento;
    private javax.swing.JTextField tfAsientos;
    private javax.swing.JTextField tfPersonaDPI;
    private javax.swing.JTextField tfPersonaNIT;
    private javax.swing.JTextField tfPersonaNombre;
    private javax.swing.JTextField tfPrecioAsiento;
    private javax.swing.JTextField tfTotal;
    // End of variables declaration//GEN-END:variables

    private Session session;
    private final int numColumns = 5;
    private final int numSubColumns = 2;
}
